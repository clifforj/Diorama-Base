/*
 * - Base
 *
 * These classes are the base of any diorama.
 */
.diorama {
  width: (@blockSize*@dioramaGridWidth);
  height: (@blockSize*@dioramaGridDepth);
  position: relative;
  .transform(rotateX(60deg) rotateZ(-28deg) translateZ(@blockSize*@dioramaLevelOffset));
}

.diorama-viewer .diorama {
  display: inline-block;
  vertical-align: middle;
}

.diorama, .layer {
  .preserve-3d();
}

.diorama.guide {
  background: linear-gradient(left, rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%),
  linear-gradient(rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%);
  background: -webkit-linear-gradient(left, rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%),
  -webkit-linear-gradient(rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%);
  background: -moz-linear-gradient(left, rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%),
  -moz-linear-gradient(rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%);
  background: -o-linear-gradient(left, rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%),
  -o-linear-gradient(rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%);
  background: -ms-linear-gradient(left, rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%),
  -ms-linear-gradient(rgba(0,0,0,.1) 1.5%, transparent 1.5%, transparent 98.5%, rgba(0,0,0,.1) 98.5%);
  background-size: @blockSize @blockSize;
}

// Row and layer classes
.diorama {
  .d-row {
    height: @blockSize;
    clear: both;
  }

  .row-positions(@dioramaGridDepth);

  .row-positions(@n, @i: 0) when (@i =< @n) {
    .d-row.pos-@{i} {
      position: absolute;
      top: @i*@blockSize;
    }
    .row-positions(@n, (@i + 1));
  }

  .layer {
    position: absolute;
    width: 100%;
    height: 100%;
    text-align: left;
    margin: 0 auto;
  }

  .layer.base {
    .transform(translateZ(0));
    z-index: 0;
  }

  .layer-positions-above(@dioramaLevelsAboveBase);

  .layer-positions-above(@n, @i: 1) when (@i =< @n) {
    .layer.above-@{i} {
      .transform(translateZ(@i*@blockSize));
      z-index: @i*100;
    }
    .layer-positions-above(@n, (@i + 1));
  }

  .layer-positions-below(@dioramaLevelsBelowBase);

  .layer-positions-below(@n, @i: 1) when (@i =< @n) {
    .layer.below-@{i} {
      .transform(translateZ(@i*@blockSize * -1));
      z-index: @i*-100;
    }
    .layer-positions-below(@n, (@i + 1));
  }
}